(function(){this.App=angular.module("app",["ngAnimate","ui.bootstrap","easypiechart","mgo-angular-wizard","textAngular","ui.router","restangular","ui.gravatar","ngCookies"])}).call(this),function(){App.config(function(RestangularProvider){return RestangularProvider.setBaseUrl("http://107.170.92.102/api")}),App.run(function(Restangular,$state){return Restangular.setErrorInterceptor(function(response){var _ref;return 422!==(_ref=response.status)&&401!==_ref&&404!==_ref?(alert("Unable to process this request"),!1):401===response.status?($state.go("special.login"),!1):404===response.status?(alert("Unable to contact server. Make sure your internet connection is fine."),!1):!0})})}.call(this),function(){App.config(function($stateProvider,$urlRouterProvider){return $urlRouterProvider.otherwise("/not_found"),$stateProvider.state("special",{templateUrl:"views/layouts/special.html"}).state("special.login",{url:"/login?inviteCode&accountId",templateUrl:"views/generic/login.html"}).state("special.signup",{url:"/signup?inviteCode&accountId",templateUrl:"views/generic/signup.html"}).state("not_found",{url:"/not_found",templateUrl:"views/generic/not_found.html"}),$stateProvider.state("dashboard",{templateUrl:"views/layouts/dashboard.html",resolve:{currentUser:function(UserService){return UserService.currentUser||UserService.refresh()},accounts:function(AccountService){return AccountService.refresh()}}}).state("dashboard.home",{url:"/dashboard",templateUrl:"views/dashboard/home.html"}).state("dashboard.monitor",{template:"<div ui-view></div>"}).state("dashboard.monitor.new",{url:"/dashboard/monitor/new",templateUrl:"views/dashboard/monitor/new.html"}).state("dashboard.settings",{url:"/dashboard/settings",templateUrl:"views/dashboard/settings.html"}),$stateProvider.state("main",{url:""}).state("main2",{url:"/"})})}.call(this),function(){App.controller("MonitorCtrl",function($scope,UserService){return $scope.monitor={interval:10,url:"http://",emailNotification:!0},$scope.intervalOptions=[{value:1,text:"minute"},{value:2,text:"2 minutes"},{value:5,text:"5 minutes"},{value:10,text:"10 minutes"},{value:15,text:"15 minutes"},{value:30,text:"30 minutes"},{value:60,text:"hour"}],$scope.phoneNumberRequired=function(){var _ref;return $scope.monitor.textNotification||$scope.monitor.callNotification&&null==(null!=(_ref=UserService.getCurrentUser)?_ref.phone:void 0)?!0:!1}})}.call(this),function(){App.controller("NavCtrl",function($scope,$rootScope,UserService,$state,AccountService){return $scope.user=UserService.currentUser,$scope.account=function(){return AccountService.current},$scope.logout=function(e){return e.preventDefault(),UserService.logout(),$state.go("main2")},$scope.otherAccounts=function(){return _.filter(AccountService.accounts,function(a){return a.id!==AccountService.current.id})},$scope.setNewAccount=function(acc){return AccountService.setCurrent(acc),$rootScope.$broadcast("new_account")}})}.call(this),function(){App.controller("SettingsCtrl",function($scope,$modal,Restangular,AccountService){return $scope.inviteSentUser={},$scope.setup=function(){return $scope.$on("new_account",function(){return function(){return AccountService.fetchMembers(),AccountService.fetchInvites()}}(this))},$scope.canAccess=function(){return AccountService.current.admin},$scope.account=function(){return AccountService.current},$scope.inviteNewMemberDialog=function(){var m;return m=$modal.open({templateUrl:"newMemberModal",controller:"newMemberModalCtrl"}),m.result.then(function(data){return $scope.inviteSentUser.data=data,AccountService.fetchInvites()})}}),App.controller("settingsGeneralCtrl",function($scope,AccountService){return $scope.account=AccountService.current}),App.controller("settingsMemberCtrl",function($scope,AccountService,Restangular){return $scope.setup=function(){return AccountService.fetchMembers()},$scope.members=function(){return AccountService.currentAccountMembers},$scope.revokeAccess=function(user_acc){return Restangular.one("accounts",user_acc.account_id).customPOST({user_id:user_acc.user.id},"revoke_access").then(function(){return AccountService.fetchMembers()})},$scope.enableAccess=function(user_acc){return Restangular.one("accounts",user_acc.account_id).customPOST({user_id:user_acc.user.id},"enable_access").then(function(){return AccountService.fetchMembers()})},$scope.removeAccess=function(user_acc){return Restangular.one("accounts",user_acc.account_id).customPOST({user_id:user_acc.user.id},"remove_access").then(function(){return AccountService.fetchMembers()})},$scope.setAdmin=function(user_acc){return Restangular.one("accounts",user_acc.account_id).customPOST({user_id:user_acc.user.id,admin:user_acc.admin},"set_admin").then(function(){return AccountService.fetchMembers()})}}),App.controller("settingsInviteCtrl",function($scope,AccountService){return $scope.setup=function(){return AccountService.fetchInvites()},$scope.invites=function(){return AccountService.currentAccountInvites},$scope.setInviteAdmin=function(invite){return invite.put().then(function(){return AccountService.fetchInvites()})},$scope.remove=function(invite){return invite.remove().then(function(){return AccountService.fetchInvites()})},$scope.resendDisabled=function(invite){return invite.invites_sent>=3},$scope.resend=function(invite){return invite.customPOST({},"resend").then(function(data){return data?($scope.inviteSentUser.data=invite,AccountService.fetchInvites()):alert("Unable to send invite")})}}),App.controller("newMemberModalCtrl",function($scope,$modalInstance,Restangular,AccountService){return $scope.user={},$scope.ok=function(){return Restangular.one("accounts",AccountService.current.id).all("account_invites").post($scope.user).then(function(){return function(){return $modalInstance.close($scope.user)}}(this))},$scope.cancel=function(){$modalInstance.dismiss("cancel")}})}.call(this),function(){App.controller("SidebarCtrl",function($scope,AccountService){return $scope.admin=function(){return AccountService.current.admin}})}.call(this),function(){App.controller("LoginCtrl",function($scope,Restangular,UserService,$state,$stateParams,$cookies){return $scope.inviteCode=$stateParams.inviteCode,$scope.accountId=$stateParams.accountId,$scope.login=function(user){return user||(user={}),$scope.inviteCode&&(user.invite_code=$scope.inviteCode),Restangular.all("sessions").post(user).then(function(data){return UserService.setUser(data.user),$cookies.currentAccountId=$scope.accountId,$state.go("dashboard.home")},function(response){var msg;return msg=response.data.error,msg||(msg="Invalid email or password"),$scope.error=msg})}})}.call(this),function(){App.controller("SignupCtrl",function($scope,Restangular,ErrorService,UserService,$state,$stateParams,$cookies){return $scope.inviteCode=$stateParams.inviteCode,$scope.accountId=$stateParams.accountId,$scope.signup=function(user){return user||(user={}),$scope.inviteCode&&(user.invite_code=$scope.inviteCode,user.account_name=""+user.email+"'s Account"),Restangular.all("users").post(user).then(function(data){return UserService.setUser(data),$cookies.currentAccountId=$scope.accountId,$state.go("dashboard.home")},function(response){return $scope.errors=ErrorService.fullMessages(response)})}})}.call(this),function(){App.filter("formattedDateTime",function(){return function(input,format){return format||(format="MM/DD/YYYY [at] h:mm a"),moment(input).format(format)}})}.call(this),function(){App.service("AccountService",function(Restangular,$cookies,UserService){return this.current=null,this.currentAccountMembers=[],this.currentAccountInvites=[],this.accounts=[],this.refresh=function(){return Restangular.all("accounts").getList().then(function(_this){return function(data){return _this.accounts=data,_this.loadCurrent()}}(this))},this.setCurrent=function(acc){var newCurrent;return newCurrent=_.find(this.accounts,function(a){return a.id===acc.id}),newCurrent?(this.current=newCurrent,$cookies.currentAccountId=this.current.id):void 0},this.loadCurrent=function(){return $cookies.currentAccountId&&(this.current=_.find(this.accounts,function(a){return parseInt($cookies.currentAccountId)===a.id}),this.current||($cookies.currentAccountId=null)),this.current||(this.current=_.find(this.accounts,function(a){var _ref;return(null!=(_ref=UserService.currentUser)?_ref.default_account_id:void 0)===a.id})),this.current||(this.current=_.first(this.accounts)),this.current?$cookies.currentAccountId=this.current.id:void 0},this.fetchMembers=function(acc){return acc||(acc=this.current),Restangular.one("accounts",acc.id).customGET("members").then(function(_this){return function(data){return _this.currentAccountMembers=data}}(this))},this.fetchInvites=function(acc){return acc||(acc=this.current),Restangular.one("accounts",acc.id).all("account_invites").getList().then(function(_this){return function(data){return _this.currentAccountInvites=data}}(this))},this})}.call(this),function(){App.service("ErrorService",function(){return{fullMessages:function(response){var field,msgs,value,_ref;msgs=[],_ref=response.data.errors;for(field in _ref)value=_ref[field],msgs.push(""+field+" "+value[0]);return msgs}}})}.call(this),function(){App.service("UserService",function(Restangular){return this.currentUser=null,this.setUser=function(currentUser){this.currentUser=currentUser},this.refresh=function(){return Restangular.all("users").customGET("details").then(function(_this){return function(data){return _this.currentUser=data}}(this))},this.logout=function(){return this.currentUser?Restangular.all("sessions").remove().then(function(){return this.currentUser=null}):void 0},this})}.call(this);